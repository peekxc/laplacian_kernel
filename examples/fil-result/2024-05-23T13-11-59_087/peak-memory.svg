<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="632" onload="init(evt)" viewBox="0 0 1200 632" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno">
    <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
    <!--NOTES: -->
    <defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
            <stop stop-color="#eeeeee" offset="5%"/>
            <stop stop-color="#eeeeb0" offset="95%"/>
        </linearGradient>
    </defs>
    <style type="text/css">
text { font-family:monospace; font-size:16px }
#title { text-anchor:middle; font-size:21px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
    <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 16;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
    <rect x="0" y="0" width="100%" height="632" fill="url(#background)"/>
    <text id="title" fill="rgb(0,0,0)" x="50.0000%" y="32.00">Peak Tracked Memory Usage (0.2 MiB)</text>
    <text id="subtitle" x="50.0000%" y="64.00">Made with the Fil profiler. <a href="https://pythonspeed.com/fil/" style="text-decoration: underline;" target="_parent">Try it on your code!</a></text>
    <text id="details" fill="rgb(0,0,0)" x="10" y="84.00"> </text>
    <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="32.00">Reset Zoom</text>
    <text id="search" fill="rgb(0,0,0)" x="1190" y="32.00">Search</text>
    <text id="matched" fill="rgb(0,0,0)" x="1190" y="619.00"> </text>
    <svg id="frames" x="10" width="1180" total_samples="193392">
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/pkgutil.py:422 (get_importer) (3,394 bytes, 1.75%)</title>
            <rect x="0.0527%" y="122" width="1.7550%" height="21" fill="rgb(255,230,230)" fg:x="102" fg:w="3394"/>
            <text x="0.3027%" y="135.50"></text>
        </g>
        <g>
            <title>                importer = path_hook(path_item) (3,394 bytes, 1.75%)</title>
            <rect x="0.0527%" y="144" width="1.7550%" height="21" fill="rgb(255,230,230)" fg:x="102" fg:w="3394"/>
            <text x="0.3027%" y="157.50"></text>
        </g>
        <g>
            <title>&lt;frozen zipimport&gt;:401 (__init__) (3,302 bytes, 1.71%)</title>
            <rect x="0.1003%" y="166" width="1.7074%" height="21" fill="rgb(255,230,230)" fg:x="194" fg:w="3302"/>
            <text x="0.3503%" y="179.50"></text>
        </g>
        <g>
            <title> (3,302 bytes, 1.71%)</title>
            <rect x="0.1003%" y="188" width="1.7074%" height="21" fill="rgb(255,230,230)" fg:x="194" fg:w="3302"/>
            <text x="0.3503%" y="201.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/pkgutil.py:64 (get_importer) (796 bytes, 0.41%)</title>
            <rect x="1.8077%" y="122" width="0.4116%" height="21" fill="rgb(255,240,240)" fg:x="3496" fg:w="796"/>
            <text x="2.0577%" y="135.50"></text>
        </g>
        <g>
            <title>    modules!) on the given path, in order to access the __path__ (796 bytes, 0.41%)</title>
            <rect x="1.8077%" y="144" width="0.4116%" height="21" fill="rgb(255,240,240)" fg:x="3496" fg:w="796"/>
            <text x="2.0577%" y="157.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1120 (_find_and_load) (976 bytes, 0.50%)</title>
            <rect x="2.2917%" y="122" width="0.5047%" height="21" fill="rgb(255,239,239)" fg:x="4432" fg:w="976"/>
            <text x="2.5417%" y="135.50"></text>
        </g>
        <g>
            <title> (976 bytes, 0.50%)</title>
            <rect x="2.2917%" y="144" width="0.5047%" height="21" fill="rgb(255,239,239)" fg:x="4432" fg:w="976"/>
            <text x="2.5417%" y="157.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:100 (__enter__) (576 bytes, 0.30%)</title>
            <rect x="2.7964%" y="166" width="0.2978%" height="21" fill="rgb(255,241,241)" fg:x="5408" fg:w="576"/>
            <text x="3.0464%" y="179.50"></text>
        </g>
        <g>
            <title> (576 bytes, 0.30%)</title>
            <rect x="2.7964%" y="188" width="0.2978%" height="21" fill="rgb(255,241,241)" fg:x="5408" fg:w="576"/>
            <text x="3.0464%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1173 (_find_and_load) (1,578 bytes, 0.82%)</title>
            <rect x="2.7964%" y="122" width="0.8160%" height="21" fill="rgb(255,236,236)" fg:x="5408" fg:w="1578"/>
            <text x="3.0464%" y="135.50"></text>
        </g>
        <g>
            <title> (1,578 bytes, 0.82%)</title>
            <rect x="2.7964%" y="144" width="0.8160%" height="21" fill="rgb(255,236,236)" fg:x="5408" fg:w="1578"/>
            <text x="3.0464%" y="157.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:179 (__enter__) (426 bytes, 0.22%)</title>
            <rect x="3.3921%" y="166" width="0.2203%" height="21" fill="rgb(255,243,243)" fg:x="6560" fg:w="426"/>
            <text x="3.6421%" y="179.50"></text>
        </g>
        <g>
            <title> (426 bytes, 0.22%)</title>
            <rect x="3.3921%" y="188" width="0.2203%" height="21" fill="rgb(255,243,243)" fg:x="6560" fg:w="426"/>
            <text x="3.6421%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1054 (_find_and_load_unlocked) (558 bytes, 0.29%)</title>
            <rect x="3.6124%" y="166" width="0.2885%" height="21" fill="rgb(255,241,241)" fg:x="6986" fg:w="558"/>
            <text x="3.8624%" y="179.50"></text>
        </g>
        <g>
            <title> (558 bytes, 0.29%)</title>
            <rect x="3.6124%" y="188" width="0.2885%" height="21" fill="rgb(255,241,241)" fg:x="6986" fg:w="558"/>
            <text x="3.8624%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1464 (find_spec) (434 bytes, 0.22%)</title>
            <rect x="4.1372%" y="254" width="0.2244%" height="21" fill="rgb(255,242,242)" fg:x="8001" fg:w="434"/>
            <text x="4.3872%" y="267.50"></text>
        </g>
        <g>
            <title> (434 bytes, 0.22%)</title>
            <rect x="4.1372%" y="276" width="0.2244%" height="21" fill="rgb(255,242,242)" fg:x="8001" fg:w="434"/>
            <text x="4.3872%" y="289.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1646 (find_spec) (1,278 bytes, 0.66%)</title>
            <rect x="4.7458%" y="342" width="0.6608%" height="21" fill="rgb(255,237,237)" fg:x="9178" fg:w="1278"/>
            <text x="4.9958%" y="355.50"></text>
        </g>
        <g>
            <title> (1,278 bytes, 0.66%)</title>
            <rect x="4.7458%" y="364" width="0.6608%" height="21" fill="rgb(255,237,237)" fg:x="9178" fg:w="1278"/>
            <text x="4.9958%" y="377.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:778 (_get_spec) (826 bytes, 0.43%)</title>
            <rect x="4.9795%" y="386" width="0.4271%" height="21" fill="rgb(255,240,240)" fg:x="9630" fg:w="826"/>
            <text x="5.2295%" y="399.50"></text>
        </g>
        <g>
            <title> (826 bytes, 0.43%)</title>
            <rect x="4.9795%" y="408" width="0.4271%" height="21" fill="rgb(255,240,240)" fg:x="9630" fg:w="826"/>
            <text x="5.2295%" y="421.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1476 (_get_spec) (2,041 bytes, 1.06%)</title>
            <rect x="4.4929%" y="298" width="1.0554%" height="21" fill="rgb(255,234,234)" fg:x="8689" fg:w="2041"/>
            <text x="4.7429%" y="311.50"></text>
        </g>
        <g>
            <title> (2,041 bytes, 1.06%)</title>
            <rect x="4.4929%" y="320" width="1.0554%" height="21" fill="rgb(255,234,234)" fg:x="8689" fg:w="2041"/>
            <text x="4.7429%" y="333.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1078 (_find_spec) (4,064 bytes, 2.10%)</title>
            <rect x="3.9753%" y="210" width="2.1014%" height="21" fill="rgb(255,228,228)" fg:x="7688" fg:w="4064"/>
            <text x="4.2253%" y="223.50"></text>
        </g>
        <g>
            <title> (4,064 bytes, 2.10%)</title>
            <rect x="3.9753%" y="232" width="2.1014%" height="21" fill="rgb(255,228,228)" fg:x="7688" fg:w="4064"/>
            <text x="4.2253%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1504 (find_spec) (3,317 bytes, 1.72%)</title>
            <rect x="4.3616%" y="254" width="1.7152%" height="21" fill="rgb(255,230,230)" fg:x="8435" fg:w="3317"/>
            <text x="4.6116%" y="267.50"></text>
        </g>
        <g>
            <title> (3,317 bytes, 1.72%)</title>
            <rect x="4.3616%" y="276" width="1.7152%" height="21" fill="rgb(255,230,230)" fg:x="8435" fg:w="3317"/>
            <text x="4.6116%" y="289.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1604 (_get_spec) (1,022 bytes, 0.53%)</title>
            <rect x="5.5483%" y="298" width="0.5285%" height="21" fill="rgb(255,239,239)" fg:x="10730" fg:w="1022"/>
            <text x="5.7983%" y="311.50"></text>
        </g>
        <g>
            <title> (1,022 bytes, 0.53%)</title>
            <rect x="5.5483%" y="320" width="0.5285%" height="21" fill="rgb(255,239,239)" fg:x="10730" fg:w="1022"/>
            <text x="5.7983%" y="333.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:261 (_find_spec) (8,820 bytes, 4.56%)</title>
            <rect x="6.1864%" y="210" width="4.5607%" height="21" fill="rgb(255,217,217)" fg:x="11964" fg:w="8820"/>
            <text x="6.4364%" y="223.50">&lt;fr..</text>
        </g>
        <g>
            <title> (8,820 bytes, 4.56%)</title>
            <rect x="6.1864%" y="232" width="4.5607%" height="21" fill="rgb(255,217,217)" fg:x="11964" fg:w="8820"/>
            <text x="6.4364%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1138 (_find_and_load_unlocked) (13,868 bytes, 7.17%)</title>
            <rect x="3.9009%" y="166" width="7.1709%" height="21" fill="rgb(255,209,209)" fg:x="7544" fg:w="13868"/>
            <text x="4.1509%" y="179.50">&lt;frozen..</text>
        </g>
        <g>
            <title> (13,868 bytes, 7.17%)</title>
            <rect x="3.9009%" y="188" width="7.1709%" height="21" fill="rgb(255,209,209)" fg:x="7544" fg:w="13868"/>
            <text x="4.1509%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:493 (module_from_spec) (870 bytes, 0.45%)</title>
            <rect x="11.2507%" y="254" width="0.4499%" height="21" fill="rgb(255,239,239)" fg:x="21758" fg:w="870"/>
            <text x="11.5007%" y="267.50"></text>
        </g>
        <g>
            <title> (870 bytes, 0.45%)</title>
            <rect x="11.2507%" y="276" width="0.4499%" height="21" fill="rgb(255,239,239)" fg:x="21758" fg:w="870"/>
            <text x="11.5007%" y="289.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:437 (_get_cached) (1,038 bytes, 0.54%)</title>
            <rect x="11.8847%" y="386" width="0.5367%" height="21" fill="rgb(255,239,239)" fg:x="22984" fg:w="1038"/>
            <text x="12.1347%" y="399.50"></text>
        </g>
        <g>
            <title> (1,038 bytes, 0.54%)</title>
            <rect x="11.8847%" y="408" width="0.5367%" height="21" fill="rgb(255,239,239)" fg:x="22984" fg:w="1038"/>
            <text x="12.1347%" y="421.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:398 (cached) (1,414 bytes, 0.73%)</title>
            <rect x="11.8847%" y="342" width="0.7312%" height="21" fill="rgb(255,237,237)" fg:x="22984" fg:w="1414"/>
            <text x="12.1347%" y="355.50"></text>
        </g>
        <g>
            <title> (1,414 bytes, 0.73%)</title>
            <rect x="11.8847%" y="364" width="0.7312%" height="21" fill="rgb(255,237,237)" fg:x="22984" fg:w="1414"/>
            <text x="12.1347%" y="377.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:676 (_load_unlocked) (2,964 bytes, 1.53%)</title>
            <rect x="11.2114%" y="210" width="1.5326%" height="21" fill="rgb(255,231,231)" fg:x="21682" fg:w="2964"/>
            <text x="11.4614%" y="223.50"></text>
        </g>
        <g>
            <title> (2,964 bytes, 1.53%)</title>
            <rect x="11.2114%" y="232" width="1.5326%" height="21" fill="rgb(255,231,231)" fg:x="21682" fg:w="2964"/>
            <text x="11.4614%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:579 (module_from_spec) (1,946 bytes, 1.01%)</title>
            <rect x="11.7378%" y="254" width="1.0062%" height="21" fill="rgb(255,235,235)" fg:x="22700" fg:w="1946"/>
            <text x="11.9878%" y="267.50"></text>
        </g>
        <g>
            <title> (1,946 bytes, 1.01%)</title>
            <rect x="11.7378%" y="276" width="1.0062%" height="21" fill="rgb(255,235,235)" fg:x="22700" fg:w="1946"/>
            <text x="11.9878%" y="289.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:558 (_init_module_attrs) (1,662 bytes, 0.86%)</title>
            <rect x="11.8847%" y="298" width="0.8594%" height="21" fill="rgb(255,236,236)" fg:x="22984" fg:w="1662"/>
            <text x="12.1347%" y="311.50"></text>
        </g>
        <g>
            <title> (1,662 bytes, 0.86%)</title>
            <rect x="11.8847%" y="320" width="0.8594%" height="21" fill="rgb(255,236,236)" fg:x="22984" fg:w="1662"/>
            <text x="12.1347%" y="333.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1007 (exec_module) (1,270 bytes, 0.66%)</title>
            <rect x="12.7441%" y="254" width="0.6567%" height="21" fill="rgb(255,237,237)" fg:x="24646" fg:w="1270"/>
            <text x="12.9941%" y="267.50"></text>
        </g>
        <g>
            <title> (1,270 bytes, 0.66%)</title>
            <rect x="12.7441%" y="276" width="0.6567%" height="21" fill="rgb(255,237,237)" fg:x="24646" fg:w="1270"/>
            <text x="12.9941%" y="289.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1069 (get_code) (41,089 bytes, 21.25%)</title>
            <rect x="13.4928%" y="298" width="21.2465%" height="21" fill="rgb(255,180,180)" fg:x="26094" fg:w="41089"/>
            <text x="13.7428%" y="311.50">&lt;frozen importlib._bootst..</text>
        </g>
        <g>
            <title> (41,089 bytes, 21.25%)</title>
            <rect x="13.4928%" y="320" width="21.2465%" height="21" fill="rgb(255,180,180)" fg:x="26094" fg:w="41089"/>
            <text x="13.7428%" y="333.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:729 (_compile_bytecode) (41,089 bytes, 21.25%)</title>
            <rect x="13.4928%" y="342" width="21.2465%" height="21" fill="rgb(255,180,180)" fg:x="26094" fg:w="41089"/>
            <text x="13.7428%" y="355.50">&lt;frozen importlib._bootst..</text>
        </g>
        <g>
            <title> (41,089 bytes, 21.25%)</title>
            <rect x="13.4928%" y="364" width="21.2465%" height="21" fill="rgb(255,180,180)" fg:x="26094" fg:w="41089"/>
            <text x="13.7428%" y="377.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:642 (get_code) (390 bytes, 0.20%)</title>
            <rect x="35.0433%" y="298" width="0.2017%" height="21" fill="rgb(255,243,243)" fg:x="67771" fg:w="390"/>
            <text x="35.2933%" y="311.50"></text>
        </g>
        <g>
            <title> (390 bytes, 0.20%)</title>
            <rect x="35.0433%" y="320" width="0.2017%" height="21" fill="rgb(255,243,243)" fg:x="67771" fg:w="390"/>
            <text x="35.2933%" y="333.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:936 (exec_module) (42,795 bytes, 22.13%)</title>
            <rect x="13.4008%" y="254" width="22.1286%" height="21" fill="rgb(255,179,179)" fg:x="25916" fg:w="42795"/>
            <text x="13.6508%" y="267.50">&lt;frozen importlib._bootstr..</text>
        </g>
        <g>
            <title> (42,795 bytes, 22.13%)</title>
            <rect x="13.4008%" y="276" width="22.1286%" height="21" fill="rgb(255,179,179)" fg:x="25916" fg:w="42795"/>
            <text x="13.6508%" y="289.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/pkgutil.py:1207 (&lt;module&gt;) (550 bytes, 0.28%)</title>
            <rect x="35.6080%" y="342" width="0.2844%" height="21" fill="rgb(255,242,242)" fg:x="68863" fg:w="550"/>
            <text x="35.8580%" y="355.50"></text>
        </g>
        <g>
            <title> (550 bytes, 0.28%)</title>
            <rect x="35.6080%" y="364" width="0.2844%" height="21" fill="rgb(255,242,242)" fg:x="68863" fg:w="550"/>
            <text x="35.8580%" y="377.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/functools.py:815 (singledispatch) (760 bytes, 0.39%)</title>
            <rect x="36.3154%" y="386" width="0.3930%" height="21" fill="rgb(255,240,240)" fg:x="70231" fg:w="760"/>
            <text x="36.5654%" y="399.50"></text>
        </g>
        <g>
            <title>    dispatch_cache = weakref.WeakKeyDictionary() (760 bytes, 0.39%)</title>
            <rect x="36.3154%" y="408" width="0.3930%" height="21" fill="rgb(255,240,240)" fg:x="70231" fg:w="760"/>
            <text x="36.5654%" y="421.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/pkgutil.py:136 (&lt;module&gt;) (2,498 bytes, 1.29%)</title>
            <rect x="35.8924%" y="342" width="1.2917%" height="21" fill="rgb(255,232,232)" fg:x="69413" fg:w="2498"/>
            <text x="36.1424%" y="355.50"></text>
        </g>
        <g>
            <title>@simplegeneric (2,498 bytes, 1.29%)</title>
            <rect x="35.8924%" y="364" width="1.2917%" height="21" fill="rgb(255,232,232)" fg:x="69413" fg:w="2498"/>
            <text x="36.1424%" y="377.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/pkgutil.py:137 (&lt;module&gt;) (920 bytes, 0.48%)</title>
            <rect x="37.1841%" y="342" width="0.4757%" height="21" fill="rgb(255,239,239)" fg:x="71911" fg:w="920"/>
            <text x="37.4341%" y="355.50"></text>
        </g>
        <g>
            <title>def iter_importer_modules(importer, prefix=&apos;&apos;): (920 bytes, 0.48%)</title>
            <rect x="37.1841%" y="364" width="0.4757%" height="21" fill="rgb(255,239,239)" fg:x="71911" fg:w="920"/>
            <text x="37.4341%" y="377.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/pkgutil.py:184 (&lt;module&gt;) (746 bytes, 0.39%)</title>
            <rect x="37.7880%" y="342" width="0.3857%" height="21" fill="rgb(255,240,240)" fg:x="73079" fg:w="746"/>
            <text x="38.0380%" y="355.50"></text>
        </g>
        <g>
            <title>iter_importer_modules.register( (746 bytes, 0.39%)</title>
            <rect x="37.7880%" y="364" width="0.3857%" height="21" fill="rgb(255,240,240)" fg:x="73079" fg:w="746"/>
            <text x="38.0380%" y="377.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/pkgutil.py:194 (&lt;module&gt;) (3,080 bytes, 1.59%)</title>
            <rect x="38.2524%" y="342" width="1.5926%" height="21" fill="rgb(255,231,231)" fg:x="73977" fg:w="3080"/>
            <text x="38.5024%" y="355.50"></text>
        </g>
        <g>
            <title>class ImpImporter: (3,080 bytes, 1.59%)</title>
            <rect x="38.2524%" y="364" width="1.5926%" height="21" fill="rgb(255,231,231)" fg:x="73977" fg:w="3080"/>
            <text x="38.5024%" y="377.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/collections/__init__.py:434 (namedtuple) (1,510 bytes, 0.78%)</title>
            <rect x="40.2442%" y="386" width="0.7808%" height="21" fill="rgb(255,236,236)" fg:x="77829" fg:w="1510"/>
            <text x="40.4942%" y="399.50"></text>
        </g>
        <g>
            <title>    __new__ = eval(code, namespace) (1,510 bytes, 0.78%)</title>
            <rect x="40.2442%" y="408" width="0.7808%" height="21" fill="rgb(255,236,236)" fg:x="77829" fg:w="1510"/>
            <text x="40.4942%" y="421.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/collections/__init__.py:480 (namedtuple) (409 bytes, 0.21%)</title>
            <rect x="41.6708%" y="386" width="0.2115%" height="21" fill="rgb(255,243,243)" fg:x="80588" fg:w="409"/>
            <text x="41.9208%" y="399.50"></text>
        </g>
        <g>
            <title>        method.__qualname__ = f&apos;{typename}.{method.__name__}&apos; (409 bytes, 0.21%)</title>
            <rect x="41.6708%" y="408" width="0.2115%" height="21" fill="rgb(255,243,243)" fg:x="80588" fg:w="409"/>
            <text x="41.9208%" y="421.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/pkgutil.py:22 (&lt;module&gt;) (5,771 bytes, 2.98%)</title>
            <rect x="39.8450%" y="342" width="2.9841%" height="21" fill="rgb(255,224,224)" fg:x="77057" fg:w="5771"/>
            <text x="40.0950%" y="355.50">/..</text>
        </g>
        <g>
            <title>ModuleInfo = namedtuple(&apos;ModuleInfo&apos;, &apos;module_finder name ispkg&apos;) (5,771 bytes, 2.98%)</title>
            <rect x="39.8450%" y="364" width="2.9841%" height="21" fill="rgb(255,224,224)" fg:x="77057" fg:w="5771"/>
            <text x="40.0950%" y="377.50">..</text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/collections/__init__.py:501 (namedtuple) (1,687 bytes, 0.87%)</title>
            <rect x="41.9568%" y="386" width="0.8723%" height="21" fill="rgb(255,236,236)" fg:x="81141" fg:w="1687"/>
            <text x="42.2068%" y="399.50"></text>
        </g>
        <g>
            <title>    result = type(typename, (tuple,), class_namespace) (1,687 bytes, 0.87%)</title>
            <rect x="41.9568%" y="408" width="0.8723%" height="21" fill="rgb(255,236,236)" fg:x="81141" fg:w="1687"/>
            <text x="42.2068%" y="421.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/pkgutil.py:269 (&lt;module&gt;) (3,955 bytes, 2.05%)</title>
            <rect x="42.9077%" y="342" width="2.0451%" height="21" fill="rgb(255,228,228)" fg:x="82980" fg:w="3955"/>
            <text x="43.1577%" y="355.50"></text>
        </g>
        <g>
            <title>class ImpLoader: (3,955 bytes, 2.05%)</title>
            <rect x="42.9077%" y="364" width="2.0451%" height="21" fill="rgb(255,228,228)" fg:x="82980" fg:w="3955"/>
            <text x="43.1577%" y="377.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/pkgutil.py:348 (&lt;module&gt;) (2,334 bytes, 1.21%)</title>
            <rect x="44.9527%" y="342" width="1.2069%" height="21" fill="rgb(255,233,233)" fg:x="86935" fg:w="2334"/>
            <text x="45.2027%" y="355.50"></text>
        </g>
        <g>
            <title>                    with open(self.filename[:-1], &apos;r&apos;) as f: (2,334 bytes, 1.21%)</title>
            <rect x="44.9527%" y="364" width="1.2069%" height="21" fill="rgb(255,233,233)" fg:x="86935" fg:w="2334"/>
            <text x="45.2027%" y="377.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:690 (_load_unlocked) (67,141 bytes, 34.72%)</title>
            <rect x="12.7441%" y="210" width="34.7176%" height="21" fill="rgb(255,161,161)" fg:x="24646" fg:w="67141"/>
            <text x="12.9941%" y="223.50">&lt;frozen importlib._bootstrap&gt;:690 (_load_u..</text>
        </g>
        <g>
            <title> (67,141 bytes, 34.72%)</title>
            <rect x="12.7441%" y="232" width="34.7176%" height="21" fill="rgb(255,161,161)" fg:x="24646" fg:w="67141"/>
            <text x="12.9941%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:940 (exec_module) (23,076 bytes, 11.93%)</title>
            <rect x="35.5294%" y="254" width="11.9322%" height="21" fill="rgb(255,198,198)" fg:x="68711" fg:w="23076"/>
            <text x="35.7794%" y="267.50">&lt;frozen impor..</text>
        </g>
        <g>
            <title> (23,076 bytes, 11.93%)</title>
            <rect x="35.5294%" y="276" width="11.9322%" height="21" fill="rgb(255,198,198)" fg:x="68711" fg:w="23076"/>
            <text x="35.7794%" y="289.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:241 (_call_with_frames_removed) (23,076 bytes, 11.93%)</title>
            <rect x="35.5294%" y="298" width="11.9322%" height="21" fill="rgb(255,198,198)" fg:x="68711" fg:w="23076"/>
            <text x="35.7794%" y="311.50">&lt;frozen impor..</text>
        </g>
        <g>
            <title> (23,076 bytes, 11.93%)</title>
            <rect x="35.5294%" y="320" width="11.9322%" height="21" fill="rgb(255,198,198)" fg:x="68711" fg:w="23076"/>
            <text x="35.7794%" y="333.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/pkgutil.py:852 (&lt;module&gt;) (636 bytes, 0.33%)</title>
            <rect x="47.1328%" y="342" width="0.3289%" height="21" fill="rgb(255,241,241)" fg:x="91151" fg:w="636"/>
            <text x="47.3828%" y="355.50"></text>
        </g>
        <g>
            <title> (636 bytes, 0.33%)</title>
            <rect x="47.1328%" y="364" width="0.3289%" height="21" fill="rgb(255,241,241)" fg:x="91151" fg:w="636"/>
            <text x="47.3828%" y="377.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1147 (_find_and_load_unlocked) (70,607 bytes, 36.51%)</title>
            <rect x="11.0718%" y="166" width="36.5098%" height="21" fill="rgb(255,159,159)" fg:x="21412" fg:w="70607"/>
            <text x="11.3218%" y="179.50">&lt;frozen importlib._bootstrap&gt;:1147 (_find_an..</text>
        </g>
        <g>
            <title> (70,607 bytes, 36.51%)</title>
            <rect x="11.0718%" y="188" width="36.5098%" height="21" fill="rgb(255,159,159)" fg:x="21412" fg:w="70607"/>
            <text x="11.3218%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1176 (_find_and_load) (85,757 bytes, 44.34%)</title>
            <rect x="3.6124%" y="122" width="44.3436%" height="21" fill="rgb(255,150,150)" fg:x="6986" fg:w="85757"/>
            <text x="3.8624%" y="135.50">&lt;frozen importlib._bootstrap&gt;:1176 (_find_and_load)</text>
        </g>
        <g>
            <title> (85,757 bytes, 44.34%)</title>
            <rect x="3.6124%" y="144" width="44.3436%" height="21" fill="rgb(255,150,150)" fg:x="6986" fg:w="85757"/>
            <text x="3.8624%" y="157.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:666 (_find_and_load_unlocked) (724 bytes, 0.37%)</title>
            <rect x="47.5816%" y="166" width="0.3744%" height="21" fill="rgb(255,240,240)" fg:x="92019" fg:w="724"/>
            <text x="47.8316%" y="179.50"></text>
        </g>
        <g>
            <title> (724 bytes, 0.37%)</title>
            <rect x="47.5816%" y="188" width="0.3744%" height="21" fill="rgb(255,240,240)" fg:x="92019" fg:w="724"/>
            <text x="47.8316%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen posixpath&gt;:71 (abspath) (404 bytes, 0.21%)</title>
            <rect x="48.4151%" y="122" width="0.2089%" height="21" fill="rgb(255,243,243)" fg:x="93631" fg:w="404"/>
            <text x="48.6651%" y="135.50"></text>
        </g>
        <g>
            <title> (404 bytes, 0.21%)</title>
            <rect x="48.4151%" y="144" width="0.2089%" height="21" fill="rgb(255,243,243)" fg:x="93631" fg:w="404"/>
            <text x="48.6651%" y="157.50"></text>
        </g>
        <g>
            <title>&lt;frozen runpy&gt;:1165 (run_path) (516 bytes, 0.27%)</title>
            <rect x="48.6240%" y="122" width="0.2668%" height="21" fill="rgb(255,242,242)" fg:x="94035" fg:w="516"/>
            <text x="48.8740%" y="135.50"></text>
        </g>
        <g>
            <title> (516 bytes, 0.27%)</title>
            <rect x="48.6240%" y="144" width="0.2668%" height="21" fill="rgb(255,242,242)" fg:x="94035" fg:w="516"/>
            <text x="48.8740%" y="157.50"></text>
        </g>
        <g>
            <title>&lt;frozen runpy&gt;:250 (run_path) (408 bytes, 0.21%)</title>
            <rect x="48.8909%" y="122" width="0.2110%" height="21" fill="rgb(255,243,243)" fg:x="94551" fg:w="408"/>
            <text x="49.1409%" y="135.50"></text>
        </g>
        <g>
            <title> (408 bytes, 0.21%)</title>
            <rect x="48.8909%" y="144" width="0.2110%" height="21" fill="rgb(255,243,243)" fg:x="94551" fg:w="408"/>
            <text x="49.1409%" y="157.50"></text>
        </g>
        <g>
            <title>&lt;frozen runpy&gt;:259 (_get_code_from_file) (1,334 bytes, 0.69%)</title>
            <rect x="49.1018%" y="166" width="0.6898%" height="21" fill="rgb(255,237,237)" fg:x="94959" fg:w="1334"/>
            <text x="49.3518%" y="179.50"></text>
        </g>
        <g>
            <title> (1,334 bytes, 0.69%)</title>
            <rect x="49.1018%" y="188" width="0.6898%" height="21" fill="rgb(255,237,237)" fg:x="94959" fg:w="1334"/>
            <text x="49.3518%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen runpy&gt;:290 (run_path) (1,802 bytes, 0.93%)</title>
            <rect x="49.1018%" y="122" width="0.9318%" height="21" fill="rgb(255,235,235)" fg:x="94959" fg:w="1802"/>
            <text x="49.3518%" y="135.50"></text>
        </g>
        <g>
            <title> (1,802 bytes, 0.93%)</title>
            <rect x="49.1018%" y="144" width="0.9318%" height="21" fill="rgb(255,235,235)" fg:x="94959" fg:w="1802"/>
            <text x="49.3518%" y="157.50"></text>
        </g>
        <g>
            <title>&lt;frozen runpy&gt;:96 (_run_module_code) (840 bytes, 0.43%)</title>
            <rect x="50.4338%" y="166" width="0.4344%" height="21" fill="rgb(255,240,240)" fg:x="97535" fg:w="840"/>
            <text x="50.6838%" y="179.50"></text>
        </g>
        <g>
            <title> (840 bytes, 0.43%)</title>
            <rect x="50.4338%" y="188" width="0.4344%" height="21" fill="rgb(255,240,240)" fg:x="97535" fg:w="840"/>
            <text x="50.6838%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen runpy&gt;:81 (_run_code) (400 bytes, 0.21%)</title>
            <rect x="50.8682%" y="210" width="0.2068%" height="21" fill="rgb(255,243,243)" fg:x="98375" fg:w="400"/>
            <text x="51.1182%" y="223.50"></text>
        </g>
        <g>
            <title> (400 bytes, 0.21%)</title>
            <rect x="50.8682%" y="232" width="0.2068%" height="21" fill="rgb(255,243,243)" fg:x="98375" fg:w="400"/>
            <text x="51.1182%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;frozen runpy&gt;:291 (run_path) (2,332 bytes, 1.21%)</title>
            <rect x="50.0336%" y="122" width="1.2058%" height="21" fill="rgb(255,233,233)" fg:x="96761" fg:w="2332"/>
            <text x="50.2836%" y="135.50"></text>
        </g>
        <g>
            <title> (2,332 bytes, 1.21%)</title>
            <rect x="50.0336%" y="144" width="1.2058%" height="21" fill="rgb(255,233,233)" fg:x="96761" fg:w="2332"/>
            <text x="50.2836%" y="157.50"></text>
        </g>
        <g>
            <title>&lt;frozen runpy&gt;:98 (_run_module_code) (718 bytes, 0.37%)</title>
            <rect x="50.8682%" y="166" width="0.3713%" height="21" fill="rgb(255,240,240)" fg:x="98375" fg:w="718"/>
            <text x="51.1182%" y="179.50"></text>
        </g>
        <g>
            <title> (718 bytes, 0.37%)</title>
            <rect x="50.8682%" y="188" width="0.3713%" height="21" fill="rgb(255,240,240)" fg:x="98375" fg:w="718"/>
            <text x="51.1182%" y="201.50"></text>
        </g>
        <g>
            <title>[No Python stack] (2,372 bytes, 1.23%)</title>
            <rect x="51.5456%" y="122" width="1.2265%" height="21" fill="rgb(255,233,233)" fg:x="99685" fg:w="2372"/>
            <text x="51.7956%" y="135.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:196 (_get_module_lock) (480 bytes, 0.25%)</title>
            <rect x="52.8507%" y="254" width="0.2482%" height="21" fill="rgb(255,242,242)" fg:x="102209" fg:w="480"/>
            <text x="53.1007%" y="267.50"></text>
        </g>
        <g>
            <title> (480 bytes, 0.25%)</title>
            <rect x="52.8507%" y="276" width="0.2482%" height="21" fill="rgb(255,242,242)" fg:x="102209" fg:w="480"/>
            <text x="53.1007%" y="289.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1173 (_find_and_load) (864 bytes, 0.45%)</title>
            <rect x="52.7721%" y="166" width="0.4468%" height="21" fill="rgb(255,240,240)" fg:x="102057" fg:w="864"/>
            <text x="53.0221%" y="179.50"></text>
        </g>
        <g>
            <title> (864 bytes, 0.45%)</title>
            <rect x="52.7721%" y="188" width="0.4468%" height="21" fill="rgb(255,240,240)" fg:x="102057" fg:w="864"/>
            <text x="53.0221%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:170 (__enter__) (712 bytes, 0.37%)</title>
            <rect x="52.8507%" y="210" width="0.3682%" height="21" fill="rgb(255,240,240)" fg:x="102209" fg:w="712"/>
            <text x="53.1007%" y="223.50"></text>
        </g>
        <g>
            <title> (712 bytes, 0.37%)</title>
            <rect x="52.8507%" y="232" width="0.3682%" height="21" fill="rgb(255,240,240)" fg:x="102209" fg:w="712"/>
            <text x="53.1007%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;frozen _collections_abc&gt;:836 (__iter__) (4,748 bytes, 2.46%)</title>
            <rect x="54.3606%" y="430" width="2.4551%" height="21" fill="rgb(255,226,226)" fg:x="105129" fg:w="4748"/>
            <text x="54.6106%" y="443.50">&lt;..</text>
        </g>
        <g>
            <title> (4,748 bytes, 2.46%)</title>
            <rect x="54.3606%" y="452" width="2.4551%" height="21" fill="rgb(255,226,226)" fg:x="105129" fg:w="4748"/>
            <text x="54.6106%" y="465.50">..</text>
        </g>
        <g>
            <title>&lt;frozen os&gt;:701 (__iter__) (4,748 bytes, 2.46%)</title>
            <rect x="54.3606%" y="474" width="2.4551%" height="21" fill="rgb(255,226,226)" fg:x="105129" fg:w="4748"/>
            <text x="54.6106%" y="487.50">&lt;..</text>
        </g>
        <g>
            <title> (4,748 bytes, 2.46%)</title>
            <rect x="54.3606%" y="496" width="2.4551%" height="21" fill="rgb(255,226,226)" fg:x="105129" fg:w="4748"/>
            <text x="54.6106%" y="509.50">..</text>
        </g>
        <g>
            <title>&lt;frozen os&gt;:761 (decode) (4,748 bytes, 2.46%)</title>
            <rect x="54.3606%" y="518" width="2.4551%" height="21" fill="rgb(255,226,226)" fg:x="105129" fg:w="4748"/>
            <text x="54.6106%" y="531.50">&lt;..</text>
        </g>
        <g>
            <title> (4,748 bytes, 2.46%)</title>
            <rect x="54.3606%" y="540" width="2.4551%" height="21" fill="rgb(255,226,226)" fg:x="105129" fg:w="4748"/>
            <text x="54.6106%" y="553.50">..</text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/site-packages/_comb_laplacian_editable_loader.py:303 (rebuild) (15,067 bytes, 7.79%)</title>
            <rect x="53.4784%" y="342" width="7.7909%" height="21" fill="rgb(255,208,208)" fg:x="103423" fg:w="15067"/>
            <text x="53.7284%" y="355.50">/Users/..</text>
        </g>
        <g>
            <title>        env = os.environ.copy() (15,067 bytes, 7.79%)</title>
            <rect x="53.4784%" y="364" width="7.7909%" height="21" fill="rgb(255,208,208)" fg:x="103423" fg:w="15067"/>
            <text x="53.7284%" y="377.50">      ..</text>
        </g>
        <g>
            <title>&lt;frozen os&gt;:714 (copy) (15,067 bytes, 7.79%)</title>
            <rect x="53.4784%" y="386" width="7.7909%" height="21" fill="rgb(255,208,208)" fg:x="103423" fg:w="15067"/>
            <text x="53.7284%" y="399.50">&lt;frozen..</text>
        </g>
        <g>
            <title> (15,067 bytes, 7.79%)</title>
            <rect x="53.4784%" y="408" width="7.7909%" height="21" fill="rgb(255,208,208)" fg:x="103423" fg:w="15067"/>
            <text x="53.7284%" y="421.50"></text>
        </g>
        <g>
            <title>&lt;frozen os&gt;:680 (__getitem__) (8,613 bytes, 4.45%)</title>
            <rect x="56.8157%" y="430" width="4.4536%" height="21" fill="rgb(255,218,218)" fg:x="109877" fg:w="8613"/>
            <text x="57.0657%" y="443.50">&lt;fr..</text>
        </g>
        <g>
            <title> (8,613 bytes, 4.45%)</title>
            <rect x="56.8157%" y="452" width="4.4536%" height="21" fill="rgb(255,218,218)" fg:x="109877" fg:w="8613"/>
            <text x="57.0657%" y="465.50"></text>
        </g>
        <g>
            <title>&lt;frozen os&gt;:761 (decode) (8,613 bytes, 4.45%)</title>
            <rect x="56.8157%" y="474" width="4.4536%" height="21" fill="rgb(255,218,218)" fg:x="109877" fg:w="8613"/>
            <text x="57.0657%" y="487.50">&lt;fr..</text>
        </g>
        <g>
            <title> (8,613 bytes, 4.45%)</title>
            <rect x="56.8157%" y="496" width="4.4536%" height="21" fill="rgb(255,218,218)" fg:x="109877" fg:w="8613"/>
            <text x="57.0657%" y="509.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:1282 (_execute_child) (732 bytes, 0.38%)</title>
            <rect x="61.5724%" y="474" width="0.3785%" height="21" fill="rgb(255,240,240)" fg:x="119076" fg:w="732"/>
            <text x="61.8224%" y="487.50"></text>
        </g>
        <g>
            <title>    def _close_pipe_fds(self, (732 bytes, 0.38%)</title>
            <rect x="61.5724%" y="496" width="0.3785%" height="21" fill="rgb(255,240,240)" fg:x="119076" fg:w="732"/>
            <text x="61.8224%" y="509.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:1802 (_execute_child) (737 bytes, 0.38%)</title>
            <rect x="62.0801%" y="474" width="0.3811%" height="21" fill="rgb(255,240,240)" fg:x="120058" fg:w="737"/>
            <text x="62.3301%" y="487.50"></text>
        </g>
        <g>
            <title>            elif isinstance(args, os.PathLike): (737 bytes, 0.38%)</title>
            <rect x="62.0801%" y="496" width="0.3811%" height="21" fill="rgb(255,240,240)" fg:x="120058" fg:w="737"/>
            <text x="62.3301%" y="509.50"></text>
        </g>
        <g>
            <title>&lt;frozen abc&gt;:119 (__instancecheck__) (737 bytes, 0.38%)</title>
            <rect x="62.0801%" y="518" width="0.3811%" height="21" fill="rgb(255,240,240)" fg:x="120058" fg:w="737"/>
            <text x="62.3301%" y="531.50"></text>
        </g>
        <g>
            <title> (737 bytes, 0.38%)</title>
            <rect x="62.0801%" y="540" width="0.3811%" height="21" fill="rgb(255,240,240)" fg:x="120058" fg:w="737"/>
            <text x="62.3301%" y="553.50"></text>
        </g>
        <g>
            <title>&lt;frozen abc&gt;:123 (__subclasscheck__) (655 bytes, 0.34%)</title>
            <rect x="62.1225%" y="562" width="0.3387%" height="21" fill="rgb(255,241,241)" fg:x="120140" fg:w="655"/>
            <text x="62.3725%" y="575.50"></text>
        </g>
        <g>
            <title> (655 bytes, 0.34%)</title>
            <rect x="62.1225%" y="584" width="0.3387%" height="21" fill="rgb(255,241,241)" fg:x="120140" fg:w="655"/>
            <text x="62.3725%" y="597.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:1870 (_execute_child) (9,857 bytes, 5.10%)</title>
            <rect x="62.4984%" y="474" width="5.0969%" height="21" fill="rgb(255,216,216)" fg:x="120867" fg:w="9857"/>
            <text x="62.7484%" y="487.50">/Use..</text>
        </g>
        <g>
            <title>                            env_list.append(k + b&apos;=&apos; + os.fsencode(v)) (9,857 bytes, 5.10%)</title>
            <rect x="62.4984%" y="496" width="5.0969%" height="21" fill="rgb(255,216,216)" fg:x="120867" fg:w="9857"/>
            <text x="62.7484%" y="509.50">   ..</text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:1898 (_execute_child) (636 bytes, 0.33%)</title>
            <rect x="67.7520%" y="474" width="0.3289%" height="21" fill="rgb(255,241,241)" fg:x="131027" fg:w="636"/>
            <text x="68.0020%" y="487.50"></text>
        </g>
        <g>
            <title>                self._close_pipe_fds(p2cread, p2cwrite, (636 bytes, 0.33%)</title>
            <rect x="67.7520%" y="496" width="0.3289%" height="21" fill="rgb(255,241,241)" fg:x="131027" fg:w="636"/>
            <text x="68.0020%" y="509.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:546 (_close_pipe_fds) (446 bytes, 0.23%)</title>
            <rect x="67.8503%" y="518" width="0.2306%" height="21" fill="rgb(255,242,242)" fg:x="131217" fg:w="446"/>
            <text x="68.1003%" y="531.50"></text>
        </g>
        <g>
            <title>        kwargs[&apos;stderr&apos;] = PIPE (446 bytes, 0.23%)</title>
            <rect x="67.8503%" y="540" width="0.2306%" height="21" fill="rgb(255,242,242)" fg:x="131217" fg:w="446"/>
            <text x="68.1003%" y="553.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:1906 (_execute_child) (50,033 bytes, 25.87%)</title>
            <rect x="68.0809%" y="474" width="25.8713%" height="21" fill="rgb(255,173,173)" fg:x="131663" fg:w="50033"/>
            <text x="68.3309%" y="487.50">/Users/mpiekenbrock/opt/minico..</text>
        </g>
        <g>
            <title>                    part = os.read(errpipe_read, 50000) (50,033 bytes, 25.87%)</title>
            <rect x="68.0809%" y="496" width="25.8713%" height="21" fill="rgb(255,173,173)" fg:x="131663" fg:w="50033"/>
            <text x="68.3309%" y="509.50">                    part = os..</text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:1026 (__init__) (62,760 bytes, 32.45%)</title>
            <rect x="61.5724%" y="430" width="32.4522%" height="21" fill="rgb(255,164,164)" fg:x="119076" fg:w="62760"/>
            <text x="61.8224%" y="443.50">/Users/mpiekenbrock/opt/miniconda3/envs..</text>
        </g>
        <g>
            <title>            self._execute_child(args, executable, preexec_fn, close_fds, (62,760 bytes, 32.45%)</title>
            <rect x="61.5724%" y="452" width="32.4522%" height="21" fill="rgb(255,164,164)" fg:x="119076" fg:w="62760"/>
            <text x="61.8224%" y="465.50">            self._execute_child(args, ..</text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:1686 (__init__) (1,484 bytes, 0.77%)</title>
            <rect x="94.0246%" y="430" width="0.7674%" height="21" fill="rgb(255,236,236)" fg:x="181836" fg:w="1484"/>
            <text x="94.2746%" y="443.50"></text>
        </g>
        <g>
            <title>        def _get_handles(self, stdin, stdout, stderr): (1,484 bytes, 0.77%)</title>
            <rect x="94.0246%" y="452" width="0.7674%" height="21" fill="rgb(255,236,236)" fg:x="181836" fg:w="1484"/>
            <text x="94.2746%" y="465.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:1789 (__init__) (2,616 bytes, 1.35%)</title>
            <rect x="94.7919%" y="430" width="1.3527%" height="21" fill="rgb(255,232,232)" fg:x="183320" fg:w="2616"/>
            <text x="95.0419%" y="443.50"></text>
        </g>
        <g>
            <title>        def _execute_child(self, args, executable, preexec_fn, close_fds, (2,616 bytes, 1.35%)</title>
            <rect x="94.7919%" y="452" width="1.3527%" height="21" fill="rgb(255,232,232)" fg:x="183320" fg:w="2616"/>
            <text x="95.0419%" y="465.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:141 (_get_handles) (506 bytes, 0.26%)</title>
            <rect x="96.5045%" y="474" width="0.2616%" height="21" fill="rgb(255,242,242)" fg:x="186632" fg:w="506"/>
            <text x="96.7545%" y="487.50"></text>
        </g>
        <g>
            <title>            try: (506 bytes, 0.26%)</title>
            <rect x="96.5045%" y="496" width="0.2616%" height="21" fill="rgb(255,242,242)" fg:x="186632" fg:w="506"/>
            <text x="96.7545%" y="509.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:1694 (_get_handles) (506 bytes, 0.26%)</title>
            <rect x="96.7662%" y="474" width="0.2616%" height="21" fill="rgb(255,242,242)" fg:x="187138" fg:w="506"/>
            <text x="97.0162%" y="487.50"></text>
        </g>
        <g>
            <title>            with self._on_error_fd_closer() as err_close_fds: (506 bytes, 0.26%)</title>
            <rect x="96.7662%" y="496" width="0.2616%" height="21" fill="rgb(255,242,242)" fg:x="187138" fg:w="506"/>
            <text x="97.0162%" y="509.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:548 (run) (69,144 bytes, 35.75%)</title>
            <rect x="61.3200%" y="386" width="35.7533%" height="21" fill="rgb(255,160,160)" fg:x="118588" fg:w="69144"/>
            <text x="61.5700%" y="399.50">/Users/mpiekenbrock/opt/miniconda3/envs/spr..</text>
        </g>
        <g>
            <title>    with Popen(*popenargs, **kwargs) as process: (69,144 bytes, 35.75%)</title>
            <rect x="61.3200%" y="408" width="35.7533%" height="21" fill="rgb(255,160,160)" fg:x="118588" fg:w="69144"/>
            <text x="61.5700%" y="421.50">    with Popen(*popenargs, **kwargs) as pr..</text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:992 (__init__) (1,388 bytes, 0.72%)</title>
            <rect x="96.3556%" y="430" width="0.7177%" height="21" fill="rgb(255,237,237)" fg:x="186344" fg:w="1388"/>
            <text x="96.6056%" y="443.50"></text>
        </g>
        <g>
            <title>         errread, errwrite) = self._get_handles(stdin, stdout, stderr) (1,388 bytes, 0.72%)</title>
            <rect x="96.3556%" y="452" width="0.7177%" height="21" fill="rgb(255,237,237)" fg:x="186344" fg:w="1388"/>
            <text x="96.6056%" y="465.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/site-packages/_comb_laplacian_editable_loader.py:312 (rebuild) (73,028 bytes, 37.76%)</title>
            <rect x="61.3200%" y="342" width="37.7616%" height="21" fill="rgb(255,157,157)" fg:x="118588" fg:w="73028"/>
            <text x="61.5700%" y="355.50">/Users/mpiekenbrock/opt/miniconda3/envs/spri/l..</text>
        </g>
        <g>
            <title>        subprocess.run(self._build_cmd, cwd=self._build_path, env=env, stdout=stdout, check=True) (73,028 bytes, 37.76%)</title>
            <rect x="61.3200%" y="364" width="37.7616%" height="21" fill="rgb(255,157,157)" fg:x="118588" fg:w="73028"/>
            <text x="61.5700%" y="377.50">        subprocess.run(self._build_cmd, cwd=s..</text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/subprocess.py:807 (run) (3,884 bytes, 2.01%)</title>
            <rect x="97.0733%" y="386" width="2.0084%" height="21" fill="rgb(255,228,228)" fg:x="187732" fg:w="3884"/>
            <text x="97.3233%" y="399.50"></text>
        </g>
        <g>
            <title>    def __init__(self, args, bufsize=-1, executable=None, (3,884 bytes, 2.01%)</title>
            <rect x="97.0733%" y="408" width="2.0084%" height="21" fill="rgb(255,228,228)" fg:x="187732" fg:w="3884"/>
            <text x="97.3233%" y="421.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/site-packages/_comb_laplacian_editable_loader.py:271 (find_spec) (88,977 bytes, 46.01%)</title>
            <rect x="53.4784%" y="298" width="46.0086%" height="21" fill="rgb(255,148,148)" fg:x="103423" fg:w="88977"/>
            <text x="53.7284%" y="311.50">/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3..</text>
        </g>
        <g>
            <title>            tree = self.rebuild() (88,977 bytes, 46.01%)</title>
            <rect x="53.4784%" y="320" width="46.0086%" height="21" fill="rgb(255,148,148)" fg:x="103423" fg:w="88977"/>
            <text x="53.7284%" y="333.50">            tree = self.rebuild()..</text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/site-packages/_comb_laplacian_editable_loader.py:506 (rebuild) (784 bytes, 0.41%)</title>
            <rect x="99.0817%" y="342" width="0.4054%" height="21" fill="rgb(255,240,240)" fg:x="191616" fg:w="784"/>
            <text x="99.3317%" y="355.50"></text>
        </g>
        <g>
            <title> (784 bytes, 0.41%)</title>
            <rect x="99.0817%" y="364" width="0.4054%" height="21" fill="rgb(255,240,240)" fg:x="191616" fg:w="784"/>
            <text x="99.3317%" y="377.50"></text>
        </g>
        <g>
            <title>/Users/mpiekenbrock/opt/miniconda3/envs/spri/lib/python3.11/site-packages/_comb_laplacian_editable_loader.py:298 (find_spec) (728 bytes, 0.38%)</title>
            <rect x="99.4871%" y="298" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="192400" fg:w="728"/>
            <text x="99.7371%" y="311.50"></text>
        </g>
        <g>
            <title>    @functools.lru_cache(maxsize=1) (728 bytes, 0.38%)</title>
            <rect x="99.4871%" y="320" width="0.3764%" height="21" fill="rgb(255,240,240)" fg:x="192400" fg:w="728"/>
            <text x="99.7371%" y="333.50"></text>
        </g>
        <g>
            <title>all (193,392 bytes, 100%)</title>
            <rect x="0.0000%" y="100" width="100.0000%" height="21" fill="rgb(255,100,100)" fg:x="0" fg:w="193392"/>
            <text x="0.2500%" y="113.50"></text>
        </g>
        <g>
            <title>benchmark_laplacian_o3_4k.py:2 (&lt;module&gt;) (91,335 bytes, 47.23%)</title>
            <rect x="52.7721%" y="122" width="47.2279%" height="21" fill="rgb(255,146,146)" fg:x="102057" fg:w="91335"/>
            <text x="53.0221%" y="135.50">benchmark_laplacian_o3_4k.py:2 (&lt;module&gt;)</text>
        </g>
        <g>
            <title>from comb_laplacian import LaplacianSparse (91,335 bytes, 47.23%)</title>
            <rect x="52.7721%" y="144" width="47.2279%" height="21" fill="rgb(255,146,146)" fg:x="102057" fg:w="91335"/>
            <text x="53.0221%" y="157.50">from comb_laplacian import LaplacianSparse</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1176 (_find_and_load) (90,471 bytes, 46.78%)</title>
            <rect x="53.2189%" y="166" width="46.7811%" height="21" fill="rgb(255,147,147)" fg:x="102921" fg:w="90471"/>
            <text x="53.4689%" y="179.50">&lt;frozen importlib._bootstrap&gt;:1176 (_find_and_load)</text>
        </g>
        <g>
            <title> (90,471 bytes, 46.78%)</title>
            <rect x="53.2189%" y="188" width="46.7811%" height="21" fill="rgb(255,147,147)" fg:x="102921" fg:w="90471"/>
            <text x="53.4689%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1138 (_find_and_load_unlocked) (90,471 bytes, 46.78%)</title>
            <rect x="53.2189%" y="210" width="46.7811%" height="21" fill="rgb(255,147,147)" fg:x="102921" fg:w="90471"/>
            <text x="53.4689%" y="223.50">&lt;frozen importlib._bootstrap&gt;:1138 (_find_and_load_unlock..</text>
        </g>
        <g>
            <title> (90,471 bytes, 46.78%)</title>
            <rect x="53.2189%" y="232" width="46.7811%" height="21" fill="rgb(255,147,147)" fg:x="102921" fg:w="90471"/>
            <text x="53.4689%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1078 (_find_spec) (90,335 bytes, 46.71%)</title>
            <rect x="53.2892%" y="254" width="46.7108%" height="21" fill="rgb(255,147,147)" fg:x="103057" fg:w="90335"/>
            <text x="53.5392%" y="267.50">&lt;frozen importlib._bootstrap&gt;:1078 (_find_spec)</text>
        </g>
        <g>
            <title> (90,335 bytes, 46.71%)</title>
            <rect x="53.2892%" y="276" width="46.7108%" height="21" fill="rgb(255,147,147)" fg:x="103057" fg:w="90335"/>
            <text x="53.5392%" y="289.50"></text>
        </g>
    </svg>
</svg>